[build-system]
requires = ['flit_core>=3.4,<4']
build-backend = 'flit_core.buildapi'

[project]
name = 'aiida-ase'
dynamic = ['description', 'version']
authors = [
    {name = 'The AiiDA team', email = 'developers@aiida.net'}
]
readme = 'README.md'
license = {file = 'LICENSE.txt'}
classifiers = [
    'Development Status :: 4 - Beta',
    'Framework :: AiiDA',
    'License :: OSI Approved :: MIT License',
    'Operating System :: POSIX :: Linux',
    'Operating System :: MacOS :: MacOS X',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Scientific/Engineering'
]
keywords = ['aiida', 'workflows', 'ase']
requires-python = '>=3.8'
dependencies = [
    'aiida-core~=2.0',
    'ase',
]

[project.urls]
Source = 'https://github.com/aiidaplugins/aiida-ase'

[project.optional-dependencies]
docs = [
    'sphinx',
    'sphinx-autoapi',
    'sphinx-book-theme',
    'sphinx-click',
    'sphinx-copybutton'
]
pre-commit = [
    'pre-commit',
    'pylint',
]
tests = [
    'pgtest',
    'pytest',
    'pytest-regressions',
]

[project.entry-points.'aiida.calculations']
'ase.ase' = 'aiida_ase.calculations.ase:AseCalculation'

[project.entry-points.'aiida.parsers']
'ase.ase' = 'aiida_ase.parsers.ase:AseParser'
'ase.gpaw' = 'aiida_ase.parsers.gpaw:GpawParser'

[project.entry-points.'aiida.workflows']
'ase.gpaw.base' = 'aiida_ase.workflows.base:GpawBaseWorkChain'

[tool.flit.module]
name = 'aiida_ase'

[tool.flit.sdist]
exclude = [
    '.github/',
    'docs/',
    'tests/',
    '.gitignore',
    '.pre-commit-config.yaml',
    '.readthedocs.yml',
]

[tool.flynt]
line-length = 120
fail-on-change = true

[tool.isort]
force_sort_within_sections = true
include_trailing_comma = true
line_length = 120
multi_line_output = 3

[tool.pytest.ini_options]
filterwarnings = [
    'ignore:Creating AiiDA configuration folder.*:UserWarning'
]

[tool.pylint.basic]
good-names = ['pk']

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    'attribute-defined-outside-init',
    'duplicate-code',
    'fixme',
    'import-outside-toplevel',
    'invalid-name',
    'raise-missing-from',
    'too-few-public-methods',
    'too-many-ancestors',
    'too-many-arguments',
    'use-a-generator',
]

[tool.yapf]
align_closing_bracket_with_visual_indent = true
based_on_style = 'google'
coalesce_brackets = true
column_limit = 120
dedent_closing_brackets = true
indent_dictionary_value = false
split_arguments_when_comma_terminated = true
